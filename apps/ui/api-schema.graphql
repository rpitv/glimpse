# This file was generated. Do not edit manually.

schema {
  query: Query
  mutation: Mutation
}

directive @rule(id: String!, options: RuleOptions, subject: AbilitySubjects) on FIELD_DEFINITION

union Permission = GroupPermission | UserPermission

type AccessLog {
  id: BigInt
  ip: String
  service: String
  timestamp: DateTime
  user: User
  userId: BigInt
}

type AlertLog {
  id: BigInt
  message: String
  severity: String
  timestamp: DateTime
}

type Asset {
  children(filter: FilterAssetInput, order: [OrderAssetInput!], pagination: PaginationInput): [Asset!]
  id: BigInt
  isLost: Boolean
  lastKnownHandler: User
  lastKnownHandlerId: BigInt
  lastKnownLocation: String
  modelNumber: String
  name: String
  notes: String
  parent: Asset
  parentId: BigInt
  purchaseDate: DateTime
  purchaseLocation: String
  purchasePrice: Int
  serialNumber: String
  tag: Int
}

type AuditLog {
  action: String!
  details: [String!]!
  id: BigInt
  identifier: BigInt
  message: String
  subject: String
  timestamp: DateTime
  user: User
  userId: BigInt
}

type BlogPost {
  author: Person
  authorDisplayName: String
  authorId: BigInt
  content: String
  id: BigInt
  postedAt: DateTime
  title: String
}

type Category {
  children(filter: FilterCategoryInput, order: [OrderCategoryInput!], pagination: PaginationInput): [Category!]
  id: BigInt
  name: String
  parent: Category
  parentId: BigInt
  priority: Int
  productions(filter: FilterProductionInput, order: [OrderProductionInput!], pagination: PaginationInput): [Production!]
}

type ContactSubmission {
  additionalData: JSON
  body: String!
  email: String!
  id: BigInt
  name: String!
  resolved: Boolean
  subject: String!
  timestamp: DateTime
  type: ContactSubmissionType!
}

type Credit {
  id: BigInt
  person: Person
  personId: BigInt
  priority: Int
  production: Production
  productionId: BigInt
  title: String
}

type Group {
  children(filter: FilterGroupInput, order: [OrderGroupInput!], pagination: PaginationInput): [Group!]
  id: BigInt
  name: String
  parent: Group
  parentId: BigInt
  permissions(filter: FilterGroupPermissionInput, order: [OrderGroupPermissionInput!], pagination: PaginationInput): [GroupPermission!]
  priority: Int
  users(filter: FilterUserGroupInput, pagination: PaginationInput): [UserGroup!]
}

type GroupPermission {
  action: String
  conditions: JSON
  fields: [String!]
  group: Group
  groupId: BigInt
  id: BigInt
  inverted: Boolean
  reason: String
  subject: [String!]
}

type Image {
  description: String
  id: BigInt
  name: String
  path: String
  people(filter: FilterPersonImageInput, pagination: PaginationInput): [PersonImage!]
  productions(filter: FilterProductionImageInput, order: [OrderProductionImageInput!], pagination: PaginationInput): [ProductionImage!]
  profilePictureFor(filter: FilterPersonInput, order: [OrderPersonInput!], pagination: PaginationInput): [Person!]
  thumbnailFor(filter: FilterProductionInput, order: [OrderProductionInput!], pagination: PaginationInput): [Production!]
}

type Mutation {
  createAlertLog(input: CreateAlertLogInput!): AlertLog!
  createAsset(input: CreateAssetInput!): Asset!
  createBlogPost(input: CreateBlogPostInput!): BlogPost!
  createCategory(input: CreateCategoryInput!): Category!
  createContactSubmissionGeneral(input: CreateContactSubmissionGeneralInput!): ContactSubmission!
  createContactSubmissionProductionRequest(input: CreateContactSubmissionProductionRequestInput!): ContactSubmission!
  createCredit(input: CreateCreditInput!): Credit!
  createGroup(input: CreateGroupInput!): Group!
  createGroupPermission(input: CreateGroupPermissionInput!): GroupPermission!
  createImage(input: CreateImageInput!): Image!
  createPerson(input: CreatePersonInput!): Person!
  createPersonImage(input: CreatePersonImageInput!): PersonImage!
  createPersonRole(input: CreatePersonRoleInput!): PersonRole!
  createProduction(input: CreateProductionInput!): Production!
  createProductionImage(input: CreateProductionImageInput!): ProductionImage!
  createProductionRSVP(input: CreateProductionRSVPInput!): ProductionRSVP!
  createProductionTag(input: CreateProductionTagInput!): ProductionTag!
  createProductionVideo(input: CreateProductionVideoInput!): ProductionVideo!
  createRedirect(input: CreateRedirectInput!): Redirect!
  createRole(input: CreateRoleInput!): Role!
  createStream(input: CreateStreamInput!): Stream!
  createUser(input: CreateUserInput!): User!
  createUserGroup(input: CreateUserGroupInput!): UserGroup!
  createUserPermission(input: CreateUserPermissionInput!): UserPermission!
  createVideo(input: CreateVideoInput!): Video!
  createVote(input: CreateVoteInput!): Vote!
  createVoteResponse(input: CreateVoteResponseInput!): VoteResponse!
  deleteAlertLog(id: BigInt!): AlertLog!
  deleteAsset(id: BigInt!): Asset!
  deleteBlogPost(id: BigInt!): BlogPost!
  deleteCategory(id: BigInt!): Category!
  deleteContactSubmission(id: BigInt!): ContactSubmission!
  deleteCredit(id: BigInt!): Credit!
  deleteGroup(id: BigInt!): Group!
  deleteGroupPermission(id: BigInt!): GroupPermission!
  deleteImage(id: BigInt!): Image!
  deletePerson(id: BigInt!): Person!
  deletePersonImage(id: BigInt!): PersonImage!
  deletePersonRole(id: BigInt!): PersonRole!
  deleteProduction(id: BigInt!): Production!
  deleteProductionImage(id: BigInt!): ProductionImage!
  deleteProductionRSVP(id: BigInt!): ProductionRSVP!
  deleteProductionTag(id: BigInt!): ProductionTag!
  deleteProductionVideo(id: BigInt!): ProductionVideo!
  deleteRedirect(id: BigInt!): Redirect!
  deleteRole(id: BigInt!): Role!
  deleteStream(id: UUID!): Stream!
  deleteUser(id: BigInt!): User!
  deleteUserGroup(id: BigInt!): UserGroup!
  deleteUserPermission(id: BigInt!): UserPermission!
  deleteVideo(id: BigInt!): Video!
  deleteVote(id: BigInt!): Vote!
  deleteVoteResponse(id: BigInt!): VoteResponse!
  loginLocal(password: String!, username: String!): User!
  logout: Boolean!
  updateAlertLog(id: BigInt!, input: UpdateAlertLogInput!): AlertLog!
  updateAsset(id: BigInt!, input: UpdateAssetInput!): Asset!
  updateBlogPost(id: BigInt!, input: UpdateBlogPostInput!): BlogPost!
  updateCategory(id: BigInt!, input: UpdateCategoryInput!): Category!
  updateContactSubmissionGeneral(id: BigInt!, input: UpdateContactSubmissionGeneralInput!): ContactSubmission!
  updateContactSubmissionProductionRequest(id: BigInt!, input: UpdateContactSubmissionProductionRequestInput!): ContactSubmission!
  updateCredit(id: BigInt!, input: UpdateCreditInput!): Credit!
  updateGroup(id: BigInt!, input: UpdateGroupInput!): Group!
  updateGroupPermission(id: BigInt!, input: UpdateGroupPermissionInput!): GroupPermission!
  updateImage(id: BigInt!, input: UpdateImageInput!): Image!
  updatePerson(id: BigInt!, input: UpdatePersonInput!): Person!
  updatePersonImage(id: BigInt!, input: UpdatePersonImageInput!): PersonImage!
  updatePersonRole(id: BigInt!, input: UpdatePersonRoleInput!): PersonRole!
  updateProduction(id: BigInt!, input: UpdateProductionInput!): Production!
  updateProductionImage(id: BigInt!, input: UpdateProductionImageInput!): ProductionImage!
  updateProductionRSVP(id: BigInt!, input: UpdateProductionRSVPInput!): ProductionRSVP!
  updateProductionVideo(id: BigInt!, input: UpdateProductionVideoInput!): ProductionVideo!
  updateRedirect(id: BigInt!, input: UpdateRedirectInput!): Redirect!
  updateRole(id: BigInt!, input: UpdateRoleInput!): Role!
  updateUser(id: BigInt!, input: UpdateUserInput!): User!
  updateUserPermission(id: BigInt!, input: UpdateUserPermissionInput!): UserPermission!
  updateVideo(id: BigInt!, input: UpdateVideoInput!): Video!
  updateVote(id: BigInt!, input: UpdateVoteInput!): Vote!
  updateVoteResponse(id: BigInt!, input: UpdateVoteResponseInput!): VoteResponse!
}

type Person {
  blogPosts(filter: FilterBlogPostInput, order: [OrderBlogPostInput!], pagination: PaginationInput): [BlogPost!]
  credits(filter: FilterCreditInput, order: [OrderCreditInput!], pagination: PaginationInput): [Credit!]
  description: String
  graduation: DateTime
  id: BigInt
  images(filter: FilterPersonImageInput, pagination: PaginationInput): [PersonImage!]
  name: String
  profilePicture: Image
  profilePictureId: BigInt
  pronouns: String
  roles(filter: FilterPersonRoleInput, order: [OrderPersonRoleInput!], pagination: PaginationInput): [PersonRole!]
  users(filter: FilterUserInput, order: [OrderUserInput!], pagination: PaginationInput): [User!]
}

type PersonImage {
  id: BigInt
  image: Image
  imageId: BigInt
  person: Person
  personId: BigInt
  priority: Int
}

type PersonRole {
  endTime: DateTime
  id: BigInt
  person: Person
  personId: BigInt
  role: Role
  roleId: BigInt
  startTime: DateTime
}

type Production {
  category: Category
  categoryId: BigInt
  closetLocation: String
  closetTime: DateTime
  credits(filter: FilterCreditInput, order: [OrderCreditInput!], pagination: PaginationInput): [Credit!]
  description: String
  discordChannel: String
  discordServer: String
  endTime: DateTime
  eventLocation: String
  id: BigInt
  images(filter: FilterProductionImageInput, order: [OrderProductionImageInput!], pagination: PaginationInput): [ProductionImage!]
  name: String
  rsvps(filter: FilterProductionRSVPInput, order: [OrderProductionRSVPInput!], pagination: PaginationInput): [ProductionRSVP!]
  startTime: DateTime
  tags(filter: FilterProductionTagInput, order: [OrderProductionTagInput!], pagination: PaginationInput): [ProductionTag!]
  teamNotes: String
  thumbnail: Image
  thumbnailId: BigInt
  videos(filter: FilterProductionVideoInput, order: [OrderProductionVideoInput!], pagination: PaginationInput): [ProductionVideo!]
}

type ProductionImage {
  id: BigInt
  image: Image
  imageId: BigInt
  priority: Int
  production: Production
  productionId: BigInt
}

type ProductionRSVP {
  id: BigInt
  notes: String
  production: Production
  productionId: BigInt
  user: User
  userId: BigInt
  willAttend: String
}

type ProductionTag {
  id: BigInt
  production: Production
  productionId: BigInt
  tag: String
}

type ProductionVideo {
  id: BigInt
  priority: Int
  production: Production
  productionId: BigInt
  video: Video
  videoId: BigInt
}

type Query {
  accessLogCount(filter: FilterAccessLogInput): Int!
  alertLogCount(filter: FilterAlertLogInput): Int!
  assetCount(filter: FilterAssetInput): Int!
  auditLogCount(filter: FilterAuditLogInput): Int!
  blogPostCount(filter: FilterBlogPostInput): Int!
  categoryCount(filter: FilterCategoryInput): Int!
  contactSubmissionCount(filter: FilterContactSubmissionInput): Int!
  creditCount(filter: FilterCreditInput): Int!
  findManyAccessLog(filter: FilterAccessLogInput, order: [OrderAccessLogInput!], pagination: PaginationInput): [AccessLog!]!
  findManyAlertLog(filter: FilterAlertLogInput, order: [OrderAlertLogInput!], pagination: PaginationInput): [AlertLog!]!
  findManyAsset(filter: FilterAssetInput, order: [OrderAssetInput!], pagination: PaginationInput): [Asset!]!
  findManyAuditLog(filter: FilterAuditLogInput, order: [OrderAuditLogInput!], pagination: PaginationInput): [AuditLog!]!
  findManyBlogPost(filter: FilterBlogPostInput, order: [OrderBlogPostInput!], pagination: PaginationInput): [BlogPost!]!
  findManyCategory(filter: FilterCategoryInput, order: [OrderCategoryInput!], pagination: PaginationInput): [Category!]!
  findManyContactSubmission(filter: FilterContactSubmissionInput, order: [OrderContactSubmissionInput!], pagination: PaginationInput): [ContactSubmission!]!
  findManyCredit(filter: FilterCreditInput, order: [OrderCreditInput!], pagination: PaginationInput): [Credit!]!
  findManyGroup(filter: FilterGroupInput, order: [OrderGroupInput!], pagination: PaginationInput): [Group!]!
  findManyGroupPermission(filter: FilterGroupPermissionInput, order: [OrderGroupPermissionInput!], pagination: PaginationInput): [GroupPermission!]!
  findManyImage(filter: FilterImageInput, order: [OrderImageInput!], pagination: PaginationInput): [Image!]!
  findManyPerson(filter: FilterPersonInput, order: [OrderPersonInput!], pagination: PaginationInput): [Person!]!
  findManyPersonRole(filter: FilterPersonRoleInput, order: [OrderPersonRoleInput!], pagination: PaginationInput): [PersonRole!]!
  findManyProduction(filter: FilterProductionInput, order: [OrderProductionInput!], pagination: PaginationInput): [Production!]!
  findManyProductionRSVP(filter: FilterProductionRSVPInput, order: [OrderProductionRSVPInput!], pagination: PaginationInput): [ProductionRSVP!]!
  findManyProductionTag(filter: FilterProductionTagInput, order: [OrderProductionTagInput!], pagination: PaginationInput): [ProductionTag!]!
  findManyRedirect(filter: FilterRedirectInput, order: [OrderRedirectInput!], pagination: PaginationInput): [Redirect!]!
  findManyRole(filter: FilterRoleInput, order: [OrderRoleInput!], pagination: PaginationInput): [Role!]!
  findManyStream(pagination: PaginationInput): [Stream!]!
  findManyUser(filter: FilterUserInput, order: [OrderUserInput!], pagination: PaginationInput): [User!]!
  findManyUserPermission(filter: FilterUserPermissionInput, order: [OrderUserPermissionInput!], pagination: PaginationInput): [UserPermission!]!
  findManyVideo(filter: FilterVideoInput, order: [OrderVideoInput!], pagination: PaginationInput): [Video!]!
  findManyVote(filter: FilterVoteInput, order: [OrderVoteInput!], pagination: PaginationInput): [Vote!]!
  findManyVoteResponse(filter: FilterVoteResponseInput, order: [OrderVoteResponseInput!], pagination: PaginationInput): [VoteResponse!]!
  findOneAccessLog(id: BigInt!): AccessLog
  findOneAlertLog(id: BigInt!): AlertLog
  findOneAsset(id: BigInt!): Asset
  findOneAuditLog(id: BigInt!): AuditLog
  findOneBlogPost(id: BigInt!): BlogPost
  findOneCategory(id: BigInt!): Category
  findOneContactSubmission(id: BigInt!): ContactSubmission
  findOneCredit(id: BigInt!): Credit
  findOneGroup(id: BigInt!): Group
  findOneGroupPermission(id: BigInt!): GroupPermission
  findOneImage(id: BigInt!): Image
  findOnePerson(id: BigInt!): Person
  findOnePersonImage(id: BigInt!): PersonImage
  findOnePersonRole(id: BigInt!): PersonRole
  findOneProduction(id: BigInt!): Production
  findOneProductionImage(id: BigInt!): ProductionImage
  findOneProductionRSVP(id: BigInt!): ProductionRSVP
  findOneProductionTag(id: BigInt!): ProductionTag
  findOneProductionVideo(id: BigInt!): ProductionVideo
  findOneRedirect(id: BigInt!): Redirect
  findOneRole(id: BigInt!): Role
  findOneStream(id: UUID!): Stream
  findOneUser(id: BigInt!): User
  findOneUserGroup(id: BigInt!): UserGroup
  findOneUserPermission(id: BigInt!): UserPermission
  findOneVideo(id: BigInt!): Video
  findOneVote(id: BigInt!): Vote
  findOneVoteResponse(id: BigInt!): VoteResponse
  groupCount(filter: FilterGroupInput): Int!
  groupPermissionCount(filter: FilterGroupPermissionInput): Int!
  imageCount(filter: FilterImageInput): Int!
  permissionsFor(userId: BigInt): [Permission!]
  personCount(filter: FilterPersonInput): Int!
  personImageCount(filter: FilterPersonImageInput): Int!
  personRoleCount(filter: FilterPersonRoleInput): Int!
  productionCount(filter: FilterProductionInput): Int!
  productionImageCount(filter: FilterProductionImageInput): Int!
  productionRSVPCount(filter: FilterProductionRSVPInput): Int!
  productionTagCount(filter: FilterProductionTagInput): Int!
  productionVideoCount(filter: FilterProductionVideoInput): Int!
  redirectCount(filter: FilterRedirectInput): Int!
  roleCount(filter: FilterRoleInput): Int!
  self: User
  streamCount: Int!
  userCount(filter: FilterUserInput): Int!
  userGroupCount(filter: FilterUserGroupInput): Int!
  userPermissionCount(filter: FilterUserPermissionInput): Int!
  videoCount(filter: FilterVideoInput): Int!
  voteCount(filter: FilterVoteInput): Int!
  voteResponseCount(filter: FilterVoteResponseInput): Int!
}

type Redirect {
  expires: DateTime
  id: BigInt
  key: String
  location: String
}

type Role {
  description: String
  displayInLeadership: Boolean
  displayInMembership: Boolean
  id: BigInt
  name: String
  people(filter: FilterPersonRoleInput, order: [OrderPersonRoleInput!], pagination: PaginationInput): [PersonRole!]
  priority: Int
}

type Stream {
  from: String
  id: UUID
  message: String
  to: String
}

type User {
  accessLogs(filter: FilterAccessLogInput, order: [OrderAccessLogInput!], pagination: PaginationInput): [AccessLog!]
  auditLogs(filter: FilterAuditLogInput, order: [OrderAuditLogInput!], pagination: PaginationInput): [AuditLog!]
  checkedOutAssets(filter: FilterAssetInput, order: [OrderAssetInput!], pagination: PaginationInput): [Asset!]
  discord: String
  groups(filter: FilterUserGroupInput, pagination: PaginationInput): [UserGroup!]
  id: BigInt
  joined: DateTime
  mail: String
  permissions(filter: FilterUserPermissionInput, order: [OrderUserPermissionInput!], pagination: PaginationInput): [UserPermission!]
  person: Person
  personId: BigInt
  productionRsvps(filter: FilterProductionRSVPInput, order: [OrderProductionRSVPInput!], pagination: PaginationInput): [ProductionRSVP!]
  username: String
  voteResponses(filter: FilterVoteResponseInput, order: [OrderVoteResponseInput!], pagination: PaginationInput): [VoteResponse!]
}

type UserGroup {
  group: Group
  groupId: BigInt
  id: BigInt
  user: User
  userId: BigInt
}

type UserPermission {
  action: String
  conditions: JSON
  fields: [String!]
  id: BigInt
  inverted: Boolean
  reason: String
  subject: [String!]
  user: User
  userId: BigInt
}

type Video {
  format: String
  id: BigInt
  metadata: JSON
  name: String
  productions(filter: FilterProductionVideoInput, order: [OrderProductionVideoInput!], pagination: PaginationInput): [ProductionVideo!]
}

type Vote {
  description: String
  expires: DateTime
  id: BigInt
  options: [String!]
  question: String
  responses(filter: FilterVoteResponseInput, order: [OrderVoteResponseInput!], pagination: PaginationInput): [VoteResponse!]
}

type VoteResponse {
  id: BigInt
  selection: String
  timestamp: DateTime
  user: User
  userId: BigInt
  vote: Vote
  voteId: BigInt
}

enum AbilitySubjects {
  AccessLog
  AlertLog
  Asset
  AuditLog
  BlogPost
  Category
  ContactSubmission
  Credit
  Group
  GroupPermission
  Image
  Person
  PersonImage
  PersonRole
  Production
  ProductionImage
  ProductionRSVP
  ProductionTag
  ProductionVideo
  Redirect
  Role
  Stream
  User
  UserGroup
  UserPermission
  Video
  Vote
  VoteResponse
}

enum AccessLogOrderableFields {
  id
  service
  timestamp
}

enum AlertLogOrderableFields {
  id
  message
  severity
  timestamp
}

enum AssetOrderableFields {
  id
  name
  purchaseDate
  purchasePrice
  tag
}

enum AuditLogOrderableFields {
  id
  identifier
  message
  subject
  timestamp
}

enum BlogPostOrderableFields {
  id
  postedAt
  title
}

enum CaseSensitivity {
  Default
  Insensitive
}

enum CategoryOrderableFields {
  id
  name
  priority
}

enum ContactSubmissionOrderableFields {
  id
  timestamp
}

enum ContactSubmissionType {
  GENERAL
  PRODUCTION_REQUEST
}

enum CreditOrderableFields {
  id
  priority
  title
}

enum GroupOrderableFields {
  id
  name
  priority
}

enum GroupPermissionOrderableFields {
  action
  id
}

enum ImageOrderableFields {
  id
  name
}

enum OrderDirection {
  Asc
  Desc
}

enum PersonOrderableFields {
  graduation
  id
  name
}

enum PersonRoleOrderableFields {
  id
  startTime
}

enum ProductionImageOrderableFields {
  priority
}

enum ProductionOrderableFields {
  categoryId
  id
  name
  startTime
}

enum ProductionRSVPOrderableFields {
  id
  willAttend
}

enum ProductionTagOrderableFields {
  id
  tag
}

enum ProductionVideoOrderableFields {
  priority
}

enum RedirectOrderableFields {
  expires
  id
  key
}

enum RoleOrderableFields {
  id
  name
  priority
}

enum UserOrderableFields {
  id
  joined
  mail
  username
}

enum UserPermissionOrderableFields {
  action
  id
}

enum VideoOrderableFields {
  id
  name
}

enum VoteOrderableFields {
  expires
  id
  question
}

enum VoteResponseOrderableFields {
  id
  timestamp
}

"The `BigInt` scalar type represents non-fractional signed whole numeric values."
scalar BigInt

"A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format."
scalar DateTime

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

"A field whose value is a generic Universally Unique Identifier: https://en.wikipedia.org/wiki/Universally_unique_identifier."
scalar UUID

input BooleanComparisonInput {
  equals: Boolean
}

input ContactSubmissionTypeComparisonInput {
  equals: ContactSubmissionType
  in: [ContactSubmissionType!]
  not: ContactSubmissionTypeComparisonInput
  notIn: [ContactSubmissionType!]
}

input CreateAlertLogInput {
  message: String
  severity: String
}

input CreateAssetInput {
  isLost: Boolean
  lastKnownHandlerId: BigInt
  lastKnownLocation: String
  modelNumber: String
  name: String
  notes: String
  parentId: BigInt
  purchaseDate: DateTime
  purchaseLocation: String
  purchasePrice: Int
  serialNumber: String
  tag: Int
}

input CreateBlogPostInput {
  authorDisplayName: String
  authorId: BigInt
  content: String
  postedAt: DateTime
  title: String
}

input CreateCategoryInput {
  name: String
  parentId: BigInt
  priority: Int
}

input CreateContactSubmissionGeneralInput {
  body: String!
  email: String!
  name: String!
  resolved: Boolean
  subject: String!
}

input CreateContactSubmissionProductionRequestInput {
  audioAvailable: Boolean!
  body: String!
  email: String!
  endTime: DateTime!
  isStudentOrganization: Boolean!
  livestreamed: Boolean!
  location: String!
  name: String!
  organizationName: String!
  phoneNumber: String
  requiredCameraCount: Int
  requiresEditing: Boolean!
  resolved: Boolean
  startTime: DateTime!
  subject: String!
}

input CreateCreditInput {
  personId: BigInt
  priority: Int
  productionId: BigInt
  title: String
}

input CreateGroupInput {
  name: String
  parentId: BigInt
  priority: Int
}

input CreateGroupPermissionInput {
  action: String
  conditions: JSON
  fields: [String!]
  groupId: BigInt
  inverted: Boolean
  reason: String
  subject: [String!]
}

input CreateImageInput {
  description: String
  name: String
  path: String
}

input CreatePersonImageInput {
  imageId: BigInt
  personId: BigInt
  priority: Int
}

input CreatePersonInput {
  description: String
  graduation: DateTime
  name: String
  profilePictureId: BigInt
  pronouns: String
}

input CreatePersonRoleInput {
  endTime: DateTime
  personId: BigInt
  roleId: BigInt
  startTime: DateTime
}

input CreateProductionImageInput {
  imageId: BigInt
  priority: Int
  productionId: BigInt
}

input CreateProductionInput {
  categoryId: BigInt
  closetLocation: String
  closetTime: DateTime
  description: String
  discordChannel: String
  discordServer: String
  endTime: DateTime
  eventLocation: String
  name: String
  startTime: DateTime
  teamNotes: String
  thumbnailId: BigInt
}

input CreateProductionRSVPInput {
  notes: String
  productionId: BigInt
  userId: BigInt
  willAttend: String
}

input CreateProductionTagInput {
  productionId: BigInt
  tag: String
}

input CreateProductionVideoInput {
  priority: Int
  productionId: BigInt
  videoId: BigInt
}

input CreateRedirectInput {
  expires: DateTime
  key: String
  location: String
}

input CreateRoleInput {
  description: String
  displayInLeadership: Boolean
  displayInMembership: Boolean
  name: String
  priority: Int
}

input CreateStreamInput {
  from: String
  to: String
}

input CreateUserGroupInput {
  groupId: BigInt
  userId: BigInt
}

input CreateUserInput {
  discord: String
  mail: String
  password: String
  personId: BigInt
  username: String
}

input CreateUserPermissionInput {
  action: String
  conditions: JSON
  fields: [String!]
  inverted: Boolean
  reason: String
  subject: [String!]
  userId: BigInt
}

input CreateVideoInput {
  format: String
  metadata: JSON
  name: String
}

input CreateVoteInput {
  description: String
  expires: DateTime
  options: [String!]
  question: String
}

input CreateVoteResponseInput {
  selection: String
  timestamp: DateTime
  userId: BigInt
  voteId: BigInt
}

input DateComparisonInput {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  lt: DateTime
  lte: DateTime
  not: DateTime
}

input FilterAccessLogInput {
  AND: [FilterAccessLogInput!]
  NOT: FilterAccessLogInput
  OR: [FilterAccessLogInput!]
  id: NumberComparisonInput
  ip: StringComparisonInput
  service: StringComparisonInput
  timestamp: DateComparisonInput
  userId: NumberComparisonInput
}

input FilterAlertLogInput {
  AND: [FilterAlertLogInput!]
  NOT: FilterAlertLogInput
  OR: [FilterAlertLogInput!]
  id: NumberComparisonInput
  message: StringComparisonInput
  severity: StringComparisonInput
  timestamp: DateComparisonInput
}

input FilterAssetInput {
  AND: [FilterAssetInput!]
  NOT: [FilterAssetInput!]
  OR: [FilterAssetInput!]
  id: NumberComparisonInput
  isLost: BooleanComparisonInput
  lastKnownHandlerId: NumberComparisonInput
  lastKnownLocation: StringComparisonInput
  modelNumber: StringComparisonInput
  name: StringComparisonInput
  notes: StringComparisonInput
  parentId: NumberComparisonInput
  purchaseDate: DateComparisonInput
  purchaseLocation: StringComparisonInput
  purchasePrice: NumberComparisonInput
  serialNumber: StringComparisonInput
  tag: NumberComparisonInput
}

input FilterAuditLogInput {
  AND: [FilterAuditLogInput!]
  NOT: FilterAuditLogInput
  OR: [FilterAuditLogInput!]
  id: NumberComparisonInput
  identifier: NumberComparisonInput
  subject: StringComparisonInput
  timestamp: DateComparisonInput
  userId: NumberComparisonInput
}

input FilterBlogPostInput {
  AND: [FilterBlogPostInput!]
  NOT: FilterBlogPostInput
  OR: [FilterBlogPostInput!]
  authorDisplayName: StringComparisonInput
  authorId: NumberComparisonInput
  id: NumberComparisonInput
  postedAt: DateComparisonInput
  title: StringComparisonInput
}

input FilterCategoryInput {
  AND: [FilterCategoryInput!]
  NOT: FilterCategoryInput
  OR: [FilterCategoryInput!]
  id: NumberComparisonInput
  name: StringComparisonInput
  parentId: NumberComparisonInput
  priority: NumberComparisonInput
}

input FilterContactSubmissionInput {
  AND: [FilterContactSubmissionInput!]
  NOT: FilterContactSubmissionInput
  OR: [FilterContactSubmissionInput!]
  email: StringComparisonInput
  id: NumberComparisonInput
  name: StringComparisonInput
  resolved: BooleanComparisonInput
  timestamp: DateComparisonInput
  type: ContactSubmissionTypeComparisonInput
}

input FilterCreditInput {
  AND: [FilterCreditInput!]
  NOT: FilterCreditInput
  OR: [FilterCreditInput!]
  id: NumberComparisonInput
  personId: NumberComparisonInput
  productionId: NumberComparisonInput
  title: StringComparisonInput
}

input FilterGroupInput {
  AND: [FilterGroupInput!]
  NOT: FilterGroupInput
  OR: [FilterGroupInput!]
  id: NumberComparisonInput
  name: StringComparisonInput
  parentId: NumberComparisonInput
}

input FilterGroupPermissionInput {
  AND: [FilterGroupPermissionInput!]
  NOT: FilterGroupPermissionInput
  OR: [FilterGroupPermissionInput!]
  action: StringComparisonInput
  groupId: NumberComparisonInput
  id: NumberComparisonInput
  inverted: BooleanComparisonInput
  reason: StringComparisonInput
}

input FilterImageInput {
  AND: [FilterImageInput!]
  NOT: FilterImageInput
  OR: [FilterImageInput!]
  description: StringComparisonInput
  id: NumberComparisonInput
  name: StringComparisonInput
  path: StringComparisonInput
}

input FilterPersonImageInput {
  AND: [FilterPersonImageInput!]
  NOT: FilterPersonImageInput
  OR: [FilterPersonImageInput!]
  id: NumberComparisonInput
  imageId: NumberComparisonInput
  personId: NumberComparisonInput
}

input FilterPersonInput {
  AND: [FilterPersonInput!]
  NOT: FilterPersonInput
  OR: [FilterPersonInput!]
  graduation: DateComparisonInput
  id: NumberComparisonInput
  name: StringComparisonInput
}

input FilterPersonRoleInput {
  AND: [FilterPersonRoleInput!]
  NOT: FilterPersonRoleInput
  OR: [FilterPersonRoleInput!]
  endTime: DateComparisonInput
  id: NumberComparisonInput
  personId: NumberComparisonInput
  roleId: NumberComparisonInput
  startTime: DateComparisonInput
}

input FilterProductionImageInput {
  AND: [FilterProductionImageInput!]
  NOT: FilterProductionImageInput
  OR: [FilterProductionImageInput!]
  id: NumberComparisonInput
  imageId: NumberComparisonInput
  productionId: NumberComparisonInput
}

input FilterProductionInput {
  AND: [FilterProductionInput!]
  NOT: FilterProductionInput
  OR: [FilterProductionInput!]
  categoryId: NumberComparisonInput
  closetLocation: StringComparisonInput
  closetTime: DateComparisonInput
  description: StringComparisonInput
  endTime: DateComparisonInput
  eventLocation: StringComparisonInput
  id: NumberComparisonInput
  name: StringComparisonInput
  startTime: DateComparisonInput
  teamNotes: StringComparisonInput
  thumbnailId: NumberComparisonInput
}

input FilterProductionRSVPInput {
  AND: [FilterProductionRSVPInput!]
  NOT: FilterProductionRSVPInput
  OR: [FilterProductionRSVPInput!]
  id: NumberComparisonInput
  notes: StringComparisonInput
  productionId: NumberComparisonInput
  userId: NumberComparisonInput
  willAttend: StringComparisonInput
}

input FilterProductionTagInput {
  AND: [FilterProductionTagInput!]
  NOT: FilterProductionTagInput
  OR: [FilterProductionTagInput!]
  id: NumberComparisonInput
  productionId: NumberComparisonInput
  tag: StringComparisonInput
}

input FilterProductionVideoInput {
  AND: [FilterProductionVideoInput!]
  NOT: FilterProductionVideoInput
  OR: [FilterProductionVideoInput!]
  id: NumberComparisonInput
  productionId: NumberComparisonInput
  videoId: NumberComparisonInput
}

input FilterRedirectInput {
  AND: [FilterRedirectInput!]
  NOT: FilterRedirectInput
  OR: [FilterRedirectInput!]
  expires: DateComparisonInput
  id: NumberComparisonInput
  key: StringComparisonInput
  location: StringComparisonInput
}

input FilterRoleInput {
  AND: [FilterRoleInput!]
  NOT: FilterRoleInput
  OR: [FilterRoleInput!]
  description: StringComparisonInput
  displayInLeadership: BooleanComparisonInput
  displayInMembership: BooleanComparisonInput
  id: NumberComparisonInput
  name: StringComparisonInput
}

input FilterUserGroupInput {
  AND: [FilterUserGroupInput!]
  NOT: FilterUserGroupInput
  OR: [FilterUserGroupInput!]
  groupId: NumberComparisonInput
  id: NumberComparisonInput
  userId: NumberComparisonInput
}

input FilterUserInput {
  AND: [FilterUserInput!]
  NOT: FilterUserInput
  OR: [FilterUserInput!]
  discord: StringComparisonInput
  id: NumberComparisonInput
  joined: DateComparisonInput
  mail: StringComparisonInput
  personId: NumberComparisonInput
  username: StringComparisonInput
}

input FilterUserPermissionInput {
  AND: [FilterUserPermissionInput!]
  NOT: FilterUserPermissionInput
  OR: [FilterUserPermissionInput!]
  action: StringComparisonInput
  id: NumberComparisonInput
  inverted: BooleanComparisonInput
  reason: StringComparisonInput
  userId: NumberComparisonInput
}

input FilterVideoInput {
  AND: [FilterVideoInput!]
  NOT: FilterVideoInput
  OR: [FilterVideoInput!]
  format: StringComparisonInput
  id: NumberComparisonInput
  name: StringComparisonInput
}

input FilterVoteInput {
  AND: [FilterVoteInput!]
  NOT: FilterVoteInput
  OR: [FilterVoteInput!]
  description: StringComparisonInput
  expires: DateComparisonInput
  id: NumberComparisonInput
  question: StringComparisonInput
}

input FilterVoteResponseInput {
  AND: [FilterVoteResponseInput!]
  NOT: FilterVoteResponseInput
  OR: [FilterVoteResponseInput!]
  id: NumberComparisonInput
  selection: StringComparisonInput
  timestamp: DateComparisonInput
  userId: NumberComparisonInput
  voteId: NumberComparisonInput
}

input NumberComparisonInput {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: Float
}

input OrderAccessLogInput {
  direction: OrderDirection!
  field: AccessLogOrderableFields!
}

input OrderAlertLogInput {
  direction: OrderDirection!
  field: AlertLogOrderableFields!
}

input OrderAssetInput {
  direction: OrderDirection!
  field: AssetOrderableFields!
}

input OrderAuditLogInput {
  direction: OrderDirection!
  field: AuditLogOrderableFields!
}

input OrderBlogPostInput {
  direction: OrderDirection!
  field: BlogPostOrderableFields!
}

input OrderCategoryInput {
  direction: OrderDirection!
  field: CategoryOrderableFields!
}

input OrderContactSubmissionInput {
  direction: OrderDirection!
  field: ContactSubmissionOrderableFields!
}

input OrderCreditInput {
  direction: OrderDirection!
  field: CreditOrderableFields!
}

input OrderGroupInput {
  direction: OrderDirection!
  field: GroupOrderableFields!
}

input OrderGroupPermissionInput {
  direction: OrderDirection!
  field: GroupPermissionOrderableFields!
}

input OrderImageInput {
  direction: OrderDirection!
  field: ImageOrderableFields!
}

input OrderPersonInput {
  direction: OrderDirection!
  field: PersonOrderableFields!
}

input OrderPersonRoleInput {
  direction: OrderDirection!
  field: PersonRoleOrderableFields!
}

input OrderProductionImageInput {
  direction: OrderDirection!
  field: ProductionImageOrderableFields!
}

input OrderProductionInput {
  direction: OrderDirection!
  field: ProductionOrderableFields!
}

input OrderProductionRSVPInput {
  direction: OrderDirection!
  field: ProductionRSVPOrderableFields!
}

input OrderProductionTagInput {
  direction: OrderDirection!
  field: ProductionTagOrderableFields!
}

input OrderProductionVideoInput {
  direction: OrderDirection!
  field: ProductionVideoOrderableFields!
}

input OrderRedirectInput {
  direction: OrderDirection!
  field: RedirectOrderableFields!
}

input OrderRoleInput {
  direction: OrderDirection!
  field: RoleOrderableFields!
}

input OrderUserInput {
  direction: OrderDirection!
  field: UserOrderableFields!
}

input OrderUserPermissionInput {
  direction: OrderDirection!
  field: UserPermissionOrderableFields!
}

input OrderVideoInput {
  direction: OrderDirection!
  field: VideoOrderableFields!
}

input OrderVoteInput {
  direction: OrderDirection!
  field: VoteOrderableFields!
}

input OrderVoteResponseInput {
  direction: OrderDirection!
  field: VoteResponseOrderableFields!
}

input PaginationInput {
  cursor: ID
  skip: Int
  take: Int!
}

input RuleOptions {
  defer: Boolean
  excludeFields: [String!]
  filterInputName: String
  inputName: String
  name: String
  orderInputName: String
  paginationInputName: String
  strict: Boolean
}

input StringComparisonInput {
  contains: String
  endsWith: String
  equals: String
  in: [String!]
  mode: CaseSensitivity
  not: String
  startsWith: String
}

input UpdateAlertLogInput {
  message: String
  severity: String
}

input UpdateAssetInput {
  isLost: Boolean
  lastKnownHandlerId: BigInt
  lastKnownLocation: String
  modelNumber: String
  name: String
  notes: String
  parentId: BigInt
  purchaseDate: DateTime
  purchaseLocation: String
  purchasePrice: Int
  serialNumber: String
  tag: Int
}

input UpdateBlogPostInput {
  authorDisplayName: String
  authorId: BigInt
  content: String
  postedAt: DateTime
  title: String
}

input UpdateCategoryInput {
  name: String
  parentId: BigInt
  priority: Int
}

input UpdateContactSubmissionGeneralInput {
  body: String
  email: String
  name: String
  resolved: Boolean
  subject: String
}

input UpdateContactSubmissionProductionRequestInput {
  audioAvailable: Boolean
  body: String
  email: String
  endTime: DateTime
  isStudentOrganization: Boolean
  livestreamed: Boolean
  location: String
  name: String
  organizationName: String
  phoneNumber: String
  requiredCameraCount: Int
  requiresEditing: Boolean
  resolved: Boolean
  startTime: DateTime
  subject: String
}

input UpdateCreditInput {
  personId: BigInt
  priority: Int
  productionId: BigInt
  title: String
}

input UpdateGroupInput {
  name: String
  parentId: BigInt
  priority: Int
}

input UpdateGroupPermissionInput {
  action: String
  conditions: JSON
  fields: [String!]
  groupId: BigInt
  inverted: Boolean
  reason: String
  subject: [String!]
}

input UpdateImageInput {
  description: String
  name: String
  path: String
}

input UpdatePersonImageInput {
  priority: Int
}

input UpdatePersonInput {
  description: String
  graduation: DateTime
  name: String
  profilePictureId: BigInt
  pronouns: String
}

input UpdatePersonRoleInput {
  endTime: DateTime
  startTime: DateTime
}

input UpdateProductionImageInput {
  priority: Int
}

input UpdateProductionInput {
  categoryId: BigInt
  closetLocation: String
  closetTime: DateTime
  description: String
  discordChannel: String
  discordServer: String
  endTime: DateTime
  eventLocation: String
  name: String
  startTime: DateTime
  teamNotes: String
  thumbnailId: BigInt
}

input UpdateProductionRSVPInput {
  notes: String
  willAttend: String
}

input UpdateProductionVideoInput {
  priority: Int
}

input UpdateRedirectInput {
  expires: DateTime
  key: String
  location: String
}

input UpdateRoleInput {
  description: String
  displayInLeadership: Boolean
  displayInMembership: Boolean
  name: String
  priority: Int
}

input UpdateUserInput {
  discord: String
  mail: String
  password: String
  personId: BigInt
  username: String
}

input UpdateUserPermissionInput {
  action: String
  conditions: JSON
  fields: [String!]
  inverted: Boolean
  reason: String
  subject: [String!]
  userId: BigInt
}

input UpdateVideoInput {
  format: String
  metadata: JSON
  name: String
}

input UpdateVoteInput {
  description: String
  expires: DateTime
  options: [String!]
  question: String
}

input UpdateVoteResponseInput {
  selection: String
  timestamp: DateTime
}
